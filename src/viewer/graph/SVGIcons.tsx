import * as React from "react";

export const renderIconArrowUp = ( x: number, y: number, width: number, height: number, color: string,
  onClick: () => void ) => {
  return (
    <svg viewBox="0 0 500 500" height={height} width={width} x={x} y={y} fill={color} onClick={onClick}
         cursor={"pointer"}>
      <path d="M484.136,328.473L264.988,109.329c-5.064-5.064-11.816-7.844-19.172-7.844c-7.208,0-13.964,2.78-19.02,7.844
			L7.852,328.265C2.788,333.333,0,340.089,0,347.297c0,7.208,2.784,13.968,7.852,19.032l16.124,16.124
			c5.064,5.064,11.824,7.86,19.032,7.86s13.964-2.796,19.032-7.86l183.852-183.852l184.056,184.064
			c5.064,5.06,11.82,7.852,19.032,7.852c7.208,0,13.96-2.792,19.028-7.852l16.128-16.132
			C494.624,356.041,494.624,338.965,484.136,328.473z"/>
    </svg>
  );
};

export const renderIconArrowDown = ( x: number, y: number, width: number, height: number, color: string,
  onClick: () => void ) => {
  return (
    <svg viewBox={"0 0 500 500"} height={height} width={width} x={x} y={y} fill={color} onClick={onClick}
         cursor={"pointer"}>
      <path d="M484.132,124.986l-16.116-16.228c-5.072-5.068-11.82-7.86-19.032-7.86c-7.208,0-13.964,2.792-19.036,7.86l-183.84,183.848
			L62.056,108.554c-5.064-5.068-11.82-7.856-19.028-7.856s-13.968,2.788-19.036,7.856l-16.12,16.128
			c-10.496,10.488-10.496,27.572,0,38.06l219.136,219.924c5.064,5.064,11.812,8.632,19.084,8.632h0.084
			c7.212,0,13.96-3.572,19.024-8.632l218.932-219.328c5.072-5.064,7.856-12.016,7.864-19.224
			C491.996,136.902,489.204,130.046,484.132,124.986z"/>
    </svg>
  );
};

export const renderIconDatabase = ( x: number, y: number, width: number, height: number, color: string ) => {
  const scaleWidth = width / 60;
  const scaleHeight = height / 60;
  return (
    <svg viewBox={"0 0 " + width / 2 + " " + height / 2} height={height} width={width} x={x} y={y} fill={color}>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path d="m18 4c-1.407 0-6-.144-6-2s4.593-2 6-2 6 .144 6 2-4.593 2-6 2z"/>
        <path d="m24 6.5c0 1.856-4.593 2-6 2s-6-.144-6-2v-2.5c0 1.856 4.593 2 6 2s6-.144 6-2z"/>
        <path d="m24 11c0 1.856-4.593 2-6 2s-6-.144-6-2v-2.5c0 1.856 4.593 2 6 2s6-.144 6-2z"/>
        <path
          d="m18 15c-6.612 0-8-2.175-8-4v-3.311l-1.177-1.176c-.33-.331-.769-.513-1.237-.513h-4.836c-1.517 0-2.75 1.233-2.75 2.75v12.5c0 1.517 1.233 2.75 2.75 2.75h18.5c1.517 0 2.75-1.233 2.75-2.75v-7.288c-1.214.622-3.107 1.038-6 1.038z"/>
      </g>
    </svg>
  );
};

export const renderIconDBButton = ( x: number, y: number, size: number, color: string, textColor: string | undefined,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 1536 / 2;
  const scaleHeight = size / 1792 / 2;
  return (
    <svg viewBox={"0 0 " + size / 2 + " " + size / 2} height={size} width={size} x={x} y={y} fill={color}>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path
          d="M768 768q237 0 443-43t325-127v170q0 69-103 128t-280 93.5t-385 34.5t-385-34.5T103 896T0 768V598q119 84 325 127t443 43zm0 768q237 0 443-43t325-127v170q0 69-103 128t-280 93.5t-385 34.5t-385-34.5t-280-93.5T0 1536v-170q119 84 325 127t443 43zm0-384q237 0 443-43t325-127v170q0 69-103 128t-280 93.5t-385 34.5t-385-34.5t-280-93.5T0 1152V982q119 84 325 127t443 43zM768 0q208 0 385 34.5t280 93.5t103 128v128q0 69-103 128t-280 93.5T768 640t-385-34.5T103 512T0 384V256q0-69 103-128t280-93.5T768 0z"/>
      </g>
    </svg>

  );
};

export const renderIconUser = ( x: number, y: number, width: number, height: number, color: string,
  textColor: string ) => {
  const scaleWidth = width / 56;
  const scaleHeight = height / 64;

  return (
    <svg viewBox={"0 0 " + width + " " + height} height={height} width={width} x={x} y={y} fill={color}>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'} fill={color}>
        <path id="Subtraction_8" data-name="Subtraction 8"
              d="M-1968.5,35.807h-15.242a6.352,6.352,0,0,1-4.547-1.628A5.868,5.868,0,0,1-1990,29.738c0-.827.028-1.643.082-2.426a23.912,23.912,0,0,1,.328-2.555,19.908,19.908,0,0,1,.621-2.543,12.135,12.135,0,0,1,1.008-2.285,8.272,8.272,0,0,1,1.453-1.9,6.149,6.149,0,0,1,2-1.254,7.068,7.068,0,0,1,2.613-.469,2.839,2.839,0,0,1,.985.5c.566.368,1.153.747,1.746,1.125a11.115,11.115,0,0,0,2.531,1.125,10.177,10.177,0,0,0,3.129.5,10.177,10.177,0,0,0,3.129-.5,11.116,11.116,0,0,0,2.531-1.125c.636-.406,1.224-.785,1.746-1.125a2.888,2.888,0,0,1,.985-.5,7.077,7.077,0,0,1,2.614.469,6.142,6.142,0,0,1,2,1.254,8.3,8.3,0,0,1,1.453,1.9,12.348,12.348,0,0,1,.754,1.572H-1964a4.505,4.505,0,0,0-4.5,4.5v9.806Zm-5-17.807a8.712,8.712,0,0,1-6.364-2.637A8.708,8.708,0,0,1-1982.5,9a8.712,8.712,0,0,1,2.637-6.364A8.709,8.709,0,0,1-1973.5,0a8.708,8.708,0,0,1,6.363,2.636A8.709,8.709,0,0,1-1964.5,9a8.705,8.705,0,0,1-2.637,6.363A8.705,8.705,0,0,1-1973.5,18Z"
              transform="translate(1990)"/>
        <g id="Group_2929" data-name="Group 2929" transform="translate(-612.5 -96.5)">
          <g id="Path_128" data-name="Path 128" transform="translate(635 119)" fill={textColor}>
            <path d="M5,0H21a5,5,0,0,1,5,5V36a5,5,0,0,1-5,5H5a5,5,0,0,1-5-5V5A5,5,0,0,1,5,0Z" stroke="none"/>
            <path
              d="M 5 3 C 3.897199630737305 3 3 3.897201538085938 3 5 L 3 36 C 3 37.10279846191406 3.897199630737305 38 5 38 L 21 38 C 22.1028003692627 38 23 37.10279846191406 23 36 L 23 5 C 23 3.897201538085938 22.1028003692627 3 21 3 L 5 3 M 5 0 L 21 0 C 23.76141929626465 0 26 2.238571166992188 26 5 L 26 36 C 26 38.76142120361328 23.76141929626465 41 21 41 L 5 41 C 2.238580703735352 41 0 38.76142120361328 0 36 L 0 5 C 0 2.238571166992188 2.238580703735352 0 5 0 Z"
              stroke="none" fill={color}/>
          </g>
          <g id="Ellipse_6" data-name="Ellipse 6" transform="translate(646 150)" fill={color} stroke={color}
             strokeWidth="3">
            <circle cx="2.5" cy="2.5" r="2.5" stroke="none"/>
            <circle cx="2.5" cy="2.5" r="1" fill="none"/>
          </g>
          <g id="Ellipse_7" data-name="Ellipse 7" transform="translate(641 119)" stroke={color}
             strokeWidth="3">
            <ellipse cx="7.5" cy="3" rx="7.5" ry="3" stroke="none"/>
            <ellipse cx="7.5" cy="3" rx="6" ry="1.5" fill="none"/>
          </g>
        </g>
      </g>
    </svg>
  );
};

export const renderIconSource = ( x: number, y: number, width: number, height: number, color: string ) => {
  const scaleWidth = width / (74 * 1.3);
  const scaleHeight = height / (36 * 1.3);

  return (
    <svg viewBox={"0 0 " + width + " " + height} height={height} width={width} x={x} y={y} fill={color}>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>

        <g id="list-with-dots" transform="translate(39.912 14.807)">
          <g id="Group_2633" data-name="Group 2633" transform="translate(0 0)">
            <path id="Path_41" data-name="Path 41"
                  d="M2.124,347.18a2.045,2.045,0,0,0-1.5.618,2.134,2.134,0,0,0,0,3,2.046,2.046,0,0,0,1.5.618,2.045,2.045,0,0,0,1.5-.618,2.134,2.134,0,0,0,0-3A2.045,2.045,0,0,0,2.124,347.18Z"
                  transform="translate(-0.003 -330.229)" />
            <path id="Path_42" data-name="Path 42"
                  d="M180.029,73.247a1.126,1.126,0,0,0-.6-.155h-32.4a1.123,1.123,0,0,0-.6.155.441.441,0,0,0-.253.369v3.145a.441.441,0,0,0,.253.369,1.124,1.124,0,0,0,.6.155h32.4a1.123,1.123,0,0,0,.6-.155.44.44,0,0,0,.253-.369V73.616A.441.441,0,0,0,180.029,73.247Z"
                  transform="translate(-146.178 -73.092)" />
            <path id="Path_43" data-name="Path 43"
                  d="M179.429,219.271h-32.4a1.12,1.12,0,0,0-.6.156.441.441,0,0,0-.253.369v3.145a.441.441,0,0,0,.253.368,1.12,1.12,0,0,0,.6.156h32.4a1.12,1.12,0,0,0,.6-.156.44.44,0,0,0,.253-.368V219.8a.44.44,0,0,0-.253-.369A1.124,1.124,0,0,0,179.429,219.271Z"
                  transform="translate(-146.178 -210.884)" />
            <path id="Path_44" data-name="Path 44"
                  d="M171.731,365.447h-24.9a.714.714,0,0,0-.461.156.461.461,0,0,0-.194.368v3.145a.461.461,0,0,0,.194.369.715.715,0,0,0,.461.155h24.9a.716.716,0,0,0,.461-.155.461.461,0,0,0,.194-.369v-3.145a.46.46,0,0,0-.194-.368A.717.717,0,0,0,171.731,365.447Z"
                  transform="translate(-138.282 -348.496)" />
          </g>
        </g>
        <g id="user">
          <g id="Group_2657" data-name="Group 2657">
            <path id="Path_59" data-name="Path 59"
                  d="M118.629,18a8.671,8.671,0,0,0,6.364-2.637A8.671,8.671,0,0,0,127.63,9a8.672,8.672,0,0,0-2.637-6.363,9,9,0,0,0-12.727,0A8.672,8.672,0,0,0,109.629,9a8.67,8.67,0,0,0,2.637,6.363A8.672,8.672,0,0,0,118.629,18Z"
                  transform="translate(-102.129)"/>
            <path id="Path_60" data-name="Path 60"
                  d="M51.186,212a24,24,0,0,0-.328-2.555,19.872,19.872,0,0,0-.621-2.543,12.061,12.061,0,0,0-1.008-2.285,8.232,8.232,0,0,0-1.453-1.9,6.119,6.119,0,0,0-2-1.254,7.045,7.045,0,0,0-2.614-.469,2.866,2.866,0,0,0-.984.5q-.773.5-1.746,1.125a11.088,11.088,0,0,1-2.531,1.124,9.964,9.964,0,0,1-6.258,0,11.085,11.085,0,0,1-2.531-1.124q-.973-.621-1.746-1.125a2.865,2.865,0,0,0-.984-.5,7.041,7.041,0,0,0-2.613.469,6.118,6.118,0,0,0-2,1.254,8.242,8.242,0,0,0-1.453,1.9A12.08,12.08,0,0,0,19.3,206.9a19.873,19.873,0,0,0-.621,2.543A23.853,23.853,0,0,0,18.35,212q-.082,1.184-.082,2.426a5.842,5.842,0,0,0,1.711,4.442,6.323,6.323,0,0,0,4.547,1.628H45.011a6.323,6.323,0,0,0,4.547-1.628,5.84,5.84,0,0,0,1.711-4.442Q51.269,213.18,51.186,212Z"
                  transform="translate(-18.268 -184.685)" />
          </g>
        </g>
      </g>
    </svg>
  );
};

export const renderIconPurpose = ( x: number, y: number, width: number, height: number, color: string ) => {
  const scaleHeight = height / (36 * 2.5);
  return (
    <svg viewBox={"0 0 " + width + " " + height} height={height} width={width} x={x} y={y} fill={color}>
      <g transform={'scale( ' + scaleHeight + ' ' + scaleHeight + ')'}>
        <g id="Group_2637" data-name="Group 2637">
          <g id="Group_2636" data-name="Group 2636">
            <path id="Path_50" data-name="Path 50"
                  d="M35.794,6.6,29.4.206A.7.7,0,0,0,28.9,0H8.016A2.112,2.112,0,0,0,5.906,2.109V3.45A9.3,9.3,0,0,0,0,12.1a.7.7,0,0,0,.7.7H9.288a.7.7,0,0,0,.7-.7V3.516a.7.7,0,0,0-.7-.7,9.284,9.284,0,0,0-1.975.212V2.109a.7.7,0,0,1,.7-.7H28.2V5.7A2.112,2.112,0,0,0,30.3,7.8h4.289V33.891a.7.7,0,0,1-.7.7H8.016a.7.7,0,0,1-.7-.7V27.867a.7.7,0,1,0-1.406,0v6.023A2.112,2.112,0,0,0,8.016,36H33.891A2.112,2.112,0,0,0,36,33.891V7.1A.7.7,0,0,0,35.794,6.6ZM8.584,4.25V11.4H1.437A7.9,7.9,0,0,1,8.584,4.25ZM30.3,6.4a.7.7,0,0,1-.7-.7V2.4l4,4Z"
                  />
          </g>
        </g>
        <g id="Group_2639" data-name="Group 2639" transform="translate(5.905 24.604)">
          <g id="Group_2638" data-name="Group 2638">
            <path id="Path_51" data-name="Path 51"
                  d="M85.207,350.207a.706.706,0,1,0,.207.5A.712.712,0,0,0,85.207,350.207Z"
                  transform="translate(-84 -350)" />
          </g>
        </g>
        <g id="Group_2641" data-name="Group 2641" transform="translate(2.532 5.36)">
          <g id="Group_2640" data-name="Group 2640">
            <path id="Path_52" data-name="Path 52"
                  d="M45.157,75.819a.707.707,0,0,0-.707.707V84.45H36.526a.707.707,0,0,0-.707.707,9.338,9.338,0,1,0,9.338-9.338Zm.707,1.445a7.889,7.889,0,0,1,4.372,1.815l-4.372,4.372Zm-.707,15.818a7.935,7.935,0,0,1-7.893-7.218h7.893a.7.7,0,0,0,.5-.207h0l5.579-5.579a7.921,7.921,0,0,1-6.079,13Z"
                  transform="translate(-35.819 -75.819)" />
          </g>
        </g>
        <g id="Group_2643" data-name="Group 2643" transform="translate(10.684 22.115)">
          <g id="Group_2642" data-name="Group 2642">
            <path id="Path_53" data-name="Path 53"
                  d="M173.995,315.605a2.121,2.121,0,0,0-1.953,2.948l-4.073,4.073a2.117,2.117,0,0,0-1.831-.009l-2.7-2.7a2.121,2.121,0,1,0-3.9.116l-2.594,2.594a2.121,2.121,0,1,0,1,1l2.58-2.58a2.114,2.114,0,0,0,1.986-.058l2.628,2.629a2.121,2.121,0,1,0,3.829.02L173,319.6a2.121,2.121,0,1,0,1-3.992Zm-17.969,9.638a.707.707,0,1,1,.489-1.216l.008.009.011.009a.706.706,0,0,1-.508,1.2Zm5.432-5.4a.707.707,0,1,1,.707-.707A.708.708,0,0,1,161.457,319.847Zm5.585,5.394a.707.707,0,1,1,.707-.707A.708.708,0,0,1,167.043,325.24Zm6.952-6.808a.707.707,0,1,1,.707-.707A.708.708,0,0,1,173.995,318.433Z"
                  transform="translate(-153.905 -315.605)" />
          </g>
        </g>
        <g id="Group_2645" data-name="Group 2645" transform="translate(22.853 16.52)">
          <g id="Group_2644" data-name="Group 2644">
            <path id="Path_54" data-name="Path 54"
                  d="M329.749,235h-3.731a.707.707,0,0,0,0,1.414h3.731a.707.707,0,1,0,0-1.414Z"
                  transform="translate(-325.311 -235)"/>
          </g>
        </g>
        <g id="Group_2647" data-name="Group 2647" transform="translate(29.752 16.52)">
          <g id="Group_2646" data-name="Group 2646">
            <path id="Path_55" data-name="Path 55"
                  d="M424.827,235.207a.706.706,0,1,0,.207.5A.712.712,0,0,0,424.827,235.207Z"
                  transform="translate(-423.62 -235)"/>
          </g>
        </g>
        <g id="Group_2649" data-name="Group 2649" transform="translate(22.802 9.771)">
          <g id="Group_2648" data-name="Group 2648">
            <path id="Path_56" data-name="Path 56"
                  d="M334.654,139h-8.636a.707.707,0,0,0,0,1.414h8.636a.707.707,0,0,0,0-1.414Z"
                  transform="translate(-325.311 -139)"/>
          </g>
        </g>
        <g id="Group_2651" data-name="Group 2651" transform="translate(22.802 13.146)">
          <g id="Group_2650" data-name="Group 2650">
            <path id="Path_57" data-name="Path 57"
                  d="M334.654,187h-8.636a.707.707,0,0,0,0,1.414h8.636a.707.707,0,1,0,0-1.414Z"
                  transform="translate(-325.311 -187)"/>
          </g>
        </g>
      </g>
    </svg>
  );
};

export const renderInfoButton = ( x: number, y: number, size: number, color: string, textColor: string | undefined,
  onClick: () => void, title: string, isLowMode: boolean ) => {
  const s = size > 2 ? size - 2 : size;
  return (
    <svg x={x - s} y={y} height={size} width={size} fill={color} onClick={onClick} filter={"url(#icon_shadow)"}>
      <title>{title}</title>
      <circle cx={s / 2} cy={s / 2} r={s / 2}/>
      <text x={s / 2}
            y={s * 0.8 / 2 + s * 0.8 / 4 + (isLowMode ? 3 : 0)}
            dominantBaseline="middle"
            textAnchor="middle"
            fill={textColor !== undefined ? textColor : "black"}
            fontSize={s * 0.8}
            fontWeight={"bold"}
      >i
      </text>
    </svg>
  );
};

export const renderClockButton = ( x: number, y: number, size: number, color: string, textColor: string | undefined,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  return (
    <svg x={x} y={y} height={size} width={size} fill={color} onClick={( e: any ) => onClick( e )} scale={0.1}>
      <title>{title}</title>
      <circle cx={size / 2} cy={size / 2} r={size / 2}/>
      <circle cx={size / 2} cy={size / 2} r={size * 0.4} fill={textColor}/>
      <rect x={size / 2 - size * 0.05} y={size * 0.2} width={size * 0.1} height={size * 0.4} fill={color}/>
      <rect x={size / 4} y={size / 2} width={size / 4 + size * 0.05} height={size / 8} fill={color}/>
    </svg>
  );
};

export const renderIconCheck = ( x: number, y: number, size: number, color: string,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 1600;
  const scaleHeight = size / 1280;
  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color}>
      <title>{title}</title>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path
          d="M1575 310q0 40-28 68l-724 724l-136 136q-28 28-68 28t-68-28l-136-136L53 740q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295l656-657q28-28 68-28t68 28l136 136q28 28 28 68z"/>
      </g>
    </svg>
  );
};

export const renderIconClose = ( x: number, y: number, size: number, color: string,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 1216;
  const scaleHeight = size / 1312;
  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color}>
      <title>{title}</title>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path
          d="M1202 1066q0 40-28 68l-136 136q-28 28-68 28t-68-28L608 976l-294 294q-28 28-68 28t-68-28L42 1134q-28-28-28-68t28-68l294-294L42 410q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294l294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68L880 704l294 294q28 28 28 68z"/>
      </g>
    </svg>
  );
};
export const renderIconLock = ( x: number, y: number, size: number, color: string,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 478;
  const scaleHeight = size / 478;
  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color}>
      <title>{title}</title>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path d="M403.88,196.563h-9.484v-44.388c0-82.099-65.151-150.681-146.582-152.145c-2.225-0.04-6.671-0.04-8.895,0
		C157.486,1.494,92.336,70.076,92.336,152.175v44.388h-9.485c-14.616,0-26.538,15.082-26.538,33.709v222.632
		c0,18.606,11.922,33.829,26.539,33.829h321.028c14.616,0,26.539-15.223,26.539-33.829V230.272
		C430.419,211.646,418.497,196.563,403.88,196.563z M273.442,341.362v67.271c0,7.703-6.449,14.222-14.158,14.222H227.45
		c-7.71,0-14.159-6.519-14.159-14.222v-67.271c-7.477-7.36-11.83-17.537-11.83-28.795c0-21.334,16.491-39.666,37.459-40.513
		c2.222-0.09,6.673-0.09,8.895,0c20.968,0.847,37.459,19.179,37.459,40.513C285.272,323.825,280.919,334.002,273.442,341.362z
		 M331.886,196.563h-84.072h-8.895h-84.072v-44.388c0-48.905,39.744-89.342,88.519-89.342c48.775,0,88.521,40.437,88.521,89.342
		V196.563z"/>
      </g>
    </svg>
  );
};
export const renderIconForbidden = ( x: number, y: number, size: number, color: string,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 512;
  const scaleHeight = size / 512;
  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color}>
      <title>{title}</title>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path d="M256,0C114.844,0,0,114.844,0,256s114.844,256,256,256s256-114.844,256-256S397.156,0,256,0z M256,448
			c-105.865,0-192-86.135-192-192c0-40.406,12.25-78.604,35.542-111.198l267.656,267.656C334.604,435.75,296.406,448,256,448z
			 M412.458,367.198L144.802,99.542C177.396,76.25,215.594,64,256,64c105.865,0,192,86.135,192,192
			C448,296.406,435.75,334.604,412.458,367.198z"/>
      </g>
    </svg>
  );
};
export const renderIconInvisible = ( x: number, y: number, size: number, color: string,
  onClick: ( e: MouseEvent ) => void, title: string ) => {
  const scaleWidth = size / 297;
  const scaleHeight = size / 297;
  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color}>
      <title>{title}</title>
      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path d="M294.908,142.225c-0.566-0.756-14.168-18.72-38.881-36.693c-10.007-7.277-20.418-13.504-31.116-18.652l47.458-47.458
	c4.084-4.084,4.084-10.706,0-14.79c-4.085-4.083-10.705-4.083-14.79,0L203.922,78.29c-18.06-6.122-36.7-9.269-55.42-9.269
	c-37.501,0-74.683,12.625-107.526,36.51C16.262,123.506,2.658,141.47,2.092,142.225c-2.789,3.718-2.789,8.831,0,12.549
	c0.566,0.756,14.17,18.72,38.884,36.694c10.006,7.277,20.418,13.503,31.115,18.651l-47.458,47.458
	c-4.084,4.084-4.084,10.706,0,14.79c2.043,2.042,4.719,3.063,7.394,3.063c2.678,0,5.354-1.021,7.396-3.063l53.658-53.658
	c18.062,6.122,36.701,9.268,55.421,9.268c37.502,0,74.684-12.625,107.525-36.511c24.713-17.974,38.315-35.938,38.881-36.693
	C297.697,151.057,297.697,145.943,294.908,142.225z M207.065,148.5c0,32.292-26.271,58.564-58.563,58.564
	c-12.376,0-23.859-3.87-33.328-10.446l23.981-23.98c2.899,1.123,6.05,1.746,9.347,1.746c14.296,0,25.883-11.587,25.883-25.883
	c0-3.298-0.623-6.447-1.746-9.348l23.98-23.98C203.196,124.641,207.065,136.123,207.065,148.5z M89.939,148.5
	c0-32.292,26.271-58.563,58.564-58.563c12.376,0,23.859,3.868,33.326,10.446l-23.98,23.98c-2.9-1.123-6.049-1.746-9.346-1.746
	c-14.296,0-25.883,11.587-25.883,25.883c0,3.297,0.623,6.446,1.746,9.346l-23.98,23.98C93.808,172.358,89.939,160.876,89.939,148.5z
	 M24.153,148.5c5.687-6.283,15.785-16.427,29.681-26.457c9.118-6.581,18.458-12.157,27.996-16.725
	c-8.088,12.443-12.807,27.268-12.807,43.182s4.719,30.738,12.807,43.182c-9.538-4.567-18.878-10.144-27.996-16.725
	C39.937,164.925,29.836,154.779,24.153,148.5z M243.167,174.957c-9.115,6.581-18.456,12.156-27.991,16.724
	c8.086-12.442,12.805-27.268,12.805-43.181s-4.719-30.738-12.805-43.181c9.535,4.567,18.876,10.143,27.991,16.724
	c13.897,10.032,23.998,20.178,29.681,26.457C267.162,154.783,257.063,164.927,243.167,174.957z"/>
      </g>
    </svg>
  );
};
export const renderIconClockAndDatabase = ( x: number, y: number, size: number, color: string, textColor: string,
  onClick: () => void, title: string ) => {
  const s = size ? size - 2 : 1;
  const scaleWidth = s / 512/1.4;
  const scaleHeight = s / 512/1.4;
  return (
    <svg height={size} width={size} x={x} y={y} fill={textColor} onClick={onClick} filter={"url(#icon_shadow"}>
      <title>{title}</title>
      <circle cx={s / 2} cy={s / 2} r={s / 2} fill={color}/>
      <g transform={'translate(' + (( s - s/1.4)/2) + ', '+ (( s - s/1.4)/2) + ' ) scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path d="M512,296c0-11.207-5.346-32.189-41.146-46.802c-3.598-1.468-7.4-2.814-11.356-4.051C459.827,240.105,460,235.046,460,230
          c0-61.435-23.924-119.193-67.365-162.635C349.193,23.924,291.435,0,230,0S110.807,23.924,67.365,67.365
          C23.924,110.807,0,168.565,0,230s23.924,119.193,67.365,162.635C110.807,436.076,168.565,460,230,460
          c15.578,0,31.033-1.561,46.159-4.643c1.095,11.686,8.506,30.186,40.987,43.444C337.999,507.312,365.292,512,394,512
          s56.001-4.687,76.854-13.199C506.654,484.189,512,463.207,512,452V299h-0.131C511.958,297.94,512,296.933,512,296z
          M471.594,295.991c-0.038,0.052-0.071,0.102-0.111,0.155c-0.075,0.098-0.157,0.198-0.242,0.299
          c-0.097,0.116-0.2,0.233-0.31,0.353c-0.096,0.104-0.197,0.21-0.303,0.317c-0.121,0.123-0.25,0.248-0.385,0.375
          c-0.117,0.11-0.236,0.22-0.362,0.332c-0.147,0.13-0.302,0.262-0.462,0.395c-0.136,0.114-0.274,0.228-0.42,0.344
          c-0.172,0.137-0.355,0.276-0.54,0.415c-0.156,0.118-0.311,0.235-0.476,0.354c-0.199,0.143-0.409,0.289-0.621,0.434
          c-0.174,0.119-0.345,0.238-0.528,0.359c-0.227,0.149-0.468,0.301-0.708,0.453c-0.19,0.12-0.376,0.24-0.575,0.361
          c-0.257,0.156-0.529,0.314-0.799,0.472c-0.206,0.12-0.405,0.239-0.618,0.359c-0.29,0.163-0.597,0.328-0.901,0.493
          c-0.215,0.117-0.424,0.233-0.647,0.35c-0.336,0.177-0.691,0.354-1.044,0.531c-0.213,0.107-0.416,0.213-0.635,0.32
          c-0.441,0.216-0.904,0.433-1.371,0.649c-0.148,0.069-0.286,0.137-0.436,0.206c-0.628,0.286-1.277,0.573-1.948,0.858
          c-0.128,0.054-0.266,0.108-0.396,0.163c-0.547,0.23-1.101,0.46-1.677,0.688c-0.249,0.099-0.512,0.196-0.765,0.294
          c-0.473,0.183-0.944,0.367-1.435,0.548c-0.302,0.112-0.62,0.222-0.929,0.333c-0.464,0.166-0.926,0.333-1.406,0.498
          c-0.334,0.115-0.682,0.228-1.024,0.342c-0.474,0.158-0.947,0.316-1.436,0.472c-0.363,0.116-0.74,0.23-1.112,0.345
          c-0.487,0.151-0.974,0.301-1.475,0.449c-0.392,0.116-0.795,0.229-1.195,0.343c-0.503,0.143-1.006,0.286-1.522,0.426
          c-0.417,0.114-0.844,0.225-1.269,0.336c-0.52,0.136-1.042,0.272-1.575,0.405c-0.44,0.11-0.889,0.218-1.337,0.325
          c-0.54,0.13-1.084,0.258-1.637,0.384c-0.462,0.105-0.931,0.209-1.401,0.311c-0.56,0.122-1.125,0.242-1.697,0.36
          c-0.484,0.1-0.972,0.198-1.465,0.295c-0.581,0.114-1.169,0.226-1.763,0.336c-0.503,0.093-1.009,0.185-1.521,0.275
          c-0.604,0.106-1.217,0.209-1.834,0.311c-0.522,0.086-1.046,0.172-1.577,0.254c-0.627,0.097-1.265,0.191-1.905,0.283
          c-0.539,0.078-1.078,0.156-1.626,0.23c-0.655,0.088-1.322,0.172-1.99,0.255c-0.554,0.069-1.106,0.138-1.668,0.203
          c-0.682,0.079-1.377,0.151-2.072,0.224c-0.568,0.059-1.133,0.12-1.71,0.175c-0.714,0.068-1.443,0.129-2.17,0.191
          c-0.576,0.049-1.147,0.1-1.731,0.145c-0.759,0.058-1.533,0.107-2.305,0.157c-0.572,0.037-1.139,0.078-1.719,0.111
          c-0.821,0.047-1.659,0.083-2.494,0.121c-0.551,0.025-1.095,0.055-1.653,0.076c-0.935,0.035-1.889,0.058-2.841,0.082
          c-0.478,0.012-0.946,0.03-1.429,0.039c-1.443,0.027-2.905,0.042-4.389,0.042s-2.946-0.015-4.389-0.042
          c-0.482-0.009-0.951-0.027-1.429-0.039c-0.953-0.024-1.907-0.047-2.841-0.082c-0.558-0.021-1.101-0.051-1.653-0.076
          c-0.836-0.038-1.674-0.074-2.494-0.121c-0.58-0.033-1.146-0.074-1.719-0.111c-0.772-0.05-1.547-0.099-2.305-0.157
          c-0.584-0.045-1.155-0.096-1.731-0.145c-0.727-0.062-1.456-0.123-2.17-0.191c-0.577-0.055-1.142-0.116-1.71-0.175
          c-0.695-0.073-1.39-0.145-2.072-0.224c-0.562-0.065-1.114-0.134-1.668-0.203c-0.668-0.083-1.334-0.166-1.99-0.255
          c-0.548-0.074-1.087-0.152-1.626-0.23c-0.64-0.092-1.277-0.185-1.905-0.283c-0.531-0.083-1.055-0.168-1.577-0.254
          c-0.617-0.102-1.229-0.205-1.834-0.311c-0.512-0.09-1.018-0.182-1.521-0.275c-0.594-0.11-1.182-0.222-1.763-0.336
          c-0.492-0.097-0.981-0.195-1.465-0.295c-0.572-0.118-1.137-0.238-1.697-0.36c-0.471-0.103-0.939-0.206-1.401-0.311
          c-0.553-0.126-1.097-0.255-1.637-0.384c-0.449-0.108-0.897-0.215-1.337-0.325c-0.533-0.133-1.055-0.269-1.575-0.405
          c-0.425-0.112-0.852-0.223-1.269-0.336c-0.516-0.14-1.019-0.283-1.522-0.426c-0.4-0.114-0.803-0.227-1.195-0.343
          c-0.501-0.148-0.988-0.299-1.475-0.449c-0.372-0.115-0.748-0.229-1.112-0.345c-0.489-0.156-0.962-0.314-1.436-0.472
          c-0.342-0.114-0.69-0.227-1.024-0.342c-0.48-0.164-0.942-0.331-1.406-0.498c-0.309-0.111-0.627-0.221-0.929-0.333
          c-0.491-0.182-0.962-0.365-1.435-0.548c-0.254-0.098-0.517-0.196-0.765-0.294c-0.576-0.229-1.13-0.458-1.677-0.688
          c-0.129-0.054-0.268-0.108-0.396-0.163c-0.672-0.286-1.321-0.572-1.948-0.858c-0.15-0.069-0.288-0.137-0.436-0.206
          c-0.466-0.217-0.93-0.433-1.371-0.649c-0.219-0.107-0.422-0.213-0.635-0.32c-0.353-0.178-0.708-0.355-1.044-0.531
          c-0.223-0.117-0.431-0.233-0.647-0.35c-0.305-0.165-0.612-0.33-0.901-0.493c-0.214-0.12-0.413-0.239-0.618-0.359
          c-0.271-0.158-0.543-0.316-0.799-0.472c-0.199-0.122-0.385-0.241-0.575-0.361c-0.24-0.151-0.481-0.303-0.708-0.453
          c-0.183-0.121-0.354-0.24-0.528-0.359c-0.212-0.146-0.423-0.291-0.621-0.434c-0.165-0.12-0.32-0.237-0.476-0.354
          c-0.185-0.14-0.368-0.278-0.54-0.415c-0.146-0.116-0.283-0.23-0.42-0.344c-0.16-0.133-0.316-0.265-0.462-0.395
          c-0.126-0.112-0.246-0.223-0.362-0.332c-0.134-0.127-0.263-0.252-0.385-0.375c-0.106-0.107-0.207-0.213-0.303-0.317
          c-0.11-0.12-0.213-0.237-0.31-0.353c-0.085-0.101-0.167-0.201-0.242-0.299c-0.041-0.053-0.074-0.103-0.111-0.155
          C321.12,289.534,347.786,276,394,276S466.88,289.534,471.594,295.991z M276,296c0,0.933,0.042,1.94,0.131,3H276v115.39
          c-14.971,3.72-30.405,5.61-46,5.61c-104.767,0-190-85.233-190-190S125.233,40,230,40s190,85.233,190,190
          c0,2.432-0.05,4.868-0.142,7.301C411.467,236.445,402.801,236,394,236c-28.708,0-56.001,4.688-76.854,13.199
          C281.346,263.811,276,284.793,276,296z M472,451.366c-3.304,6.15-30.193,20.634-78,20.634s-74.696-14.485-78-20.634v-32.052
          c0.385,0.162,0.754,0.327,1.146,0.487C337.999,428.312,365.292,433,394,433s56.001-4.687,76.854-13.199
          c0.393-0.161,0.761-0.325,1.146-0.487V451.366z M472,372.339c-3.223,6.13-30.105,20.661-78,20.661
          c-47.895,0-74.777-14.531-78-20.661v-30.025c0.385,0.162,0.754,0.327,1.146,0.487C337.999,351.312,365.292,356,394,356
          s56.001-4.687,76.854-13.198c0.393-0.161,0.761-0.325,1.146-0.487V372.339z"/>
        <polygon points="210,210 120,210 120,250 250,250 250,80 210,80 			"/>
      </g>
    </svg>
  );
};

export const renderIconPermission = ( x: number, y: number, size: number, color: string, textColor: string,
  onClick: () => void, title: string ) => {

  const s = size - 2;
  const scaleWidth = s / 512/1.4;
  const scaleHeight = s / 512/1.4;
  return (
    <svg height={size} width={size} x={x} y={y} fill={textColor} onClick={onClick} filter={"url(#icon_shadow)"}>
      <title>{title}</title>
      <circle cx={s / 2} cy={s / 2} r={s / 2} fill={color} />
      <g transform={'translate(' + (( s - s/1.4)/2) + ', '+ (( s - s/1.4)/2) + ' ) scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path
          d="m459.669 82.906-196-81.377c-4.91-2.038-10.429-2.039-15.338 0l-196 81.377c-7.465 3.1-12.331 10.388-12.331 18.471v98.925c0 136.213 82.329 258.74 208.442 310.215 4.844 1.977 10.271 1.977 15.116 0 126.111-51.474 208.442-174.001 208.442-310.215v-98.925c0-8.083-4.865-15.371-12.331-18.471zm-27.669 117.396c0 115.795-68 222.392-176 269.974-105.114-46.311-176-151.041-176-269.974v-85.573l176-73.074 176 73.074zm-198.106 67.414 85.964-85.963c7.81-7.81 20.473-7.811 28.284 0s7.81 20.474-.001 28.284l-100.105 100.105c-7.812 7.812-20.475 7.809-28.284 0l-55.894-55.894c-7.811-7.811-7.811-20.474 0-28.284s20.474-7.811 28.284 0z"/>
      </g>

    </svg>
  );
};

export const renderIconProcess = ( x: number, y: number, size: number, color: string, textColor: string,
  onClick: () => void, title: string | null ) => {

  const scaleWidth = size / 1400;
  const scaleHeight = size / 1400;

  return (
    <svg viewBox={"0 0 " + size + " " + size} height={size} width={size} x={x} y={y} fill={color} onClick={onClick}>
      {title && (
        <title>{title}</title>
      )}

      <g transform={'scale( ' + scaleWidth + ' ' + scaleHeight + ')'}>
        <path
          d="m272.066 512h-32.133c-25.989 0-47.134-21.144-47.134-47.133v-10.871c-11.049-3.53-21.784-7.986-32.097-13.323l-7.704 7.704c-18.659 18.682-48.548 18.134-66.665-.007l-22.711-22.71c-18.149-18.129-18.671-48.008.006-66.665l7.698-7.698c-5.337-10.313-9.792-21.046-13.323-32.097h-10.87c-25.988 0-47.133-21.144-47.133-47.133v-32.134c0-25.989 21.145-47.133 47.134-47.133h10.87c3.531-11.05 7.986-21.784 13.323-32.097l-7.704-7.703c-18.666-18.646-18.151-48.528.006-66.665l22.713-22.712c18.159-18.184 48.041-18.638 66.664.006l7.697 7.697c10.313-5.336 21.048-9.792 32.097-13.323v-10.87c0-25.989 21.144-47.133 47.134-47.133h32.133c25.989 0 47.133 21.144 47.133 47.133v10.871c11.049 3.53 21.784 7.986 32.097 13.323l7.704-7.704c18.659-18.682 48.548-18.134 66.665.007l22.711 22.71c18.149 18.129 18.671 48.008-.006 66.665l-7.698 7.698c5.337 10.313 9.792 21.046 13.323 32.097h10.87c25.989 0 47.134 21.144 47.134 47.133v32.134c0 25.989-21.145 47.133-47.134 47.133h-10.87c-3.531 11.05-7.986 21.784-13.323 32.097l7.704 7.704c18.666 18.646 18.151 48.528-.006 66.665l-22.713 22.712c-18.159 18.184-48.041 18.638-66.664-.006l-7.697-7.697c-10.313 5.336-21.048 9.792-32.097 13.323v10.871c0 25.987-21.144 47.131-47.134 47.131zm-106.349-102.83c14.327 8.473 29.747 14.874 45.831 19.025 6.624 1.709 11.252 7.683 11.252 14.524v22.148c0 9.447 7.687 17.133 17.134 17.133h32.133c9.447 0 17.134-7.686 17.134-17.133v-22.148c0-6.841 4.628-12.815 11.252-14.524 16.084-4.151 31.504-10.552 45.831-19.025 5.895-3.486 13.4-2.538 18.243 2.305l15.688 15.689c6.764 6.772 17.626 6.615 24.224.007l22.727-22.726c6.582-6.574 6.802-17.438.006-24.225l-15.695-15.695c-4.842-4.842-5.79-12.348-2.305-18.242 8.473-14.326 14.873-29.746 19.024-45.831 1.71-6.624 7.684-11.251 14.524-11.251h22.147c9.447 0 17.134-7.686 17.134-17.133v-32.134c0-9.447-7.687-17.133-17.134-17.133h-22.147c-6.841 0-12.814-4.628-14.524-11.251-4.151-16.085-10.552-31.505-19.024-45.831-3.485-5.894-2.537-13.4 2.305-18.242l15.689-15.689c6.782-6.774 6.605-17.634.006-24.225l-22.725-22.725c-6.587-6.596-17.451-6.789-24.225-.006l-15.694 15.695c-4.842 4.843-12.35 5.791-18.243 2.305-14.327-8.473-29.747-14.874-45.831-19.025-6.624-1.709-11.252-7.683-11.252-14.524v-22.15c0-9.447-7.687-17.133-17.134-17.133h-32.133c-9.447 0-17.134 7.686-17.134 17.133v22.148c0 6.841-4.628 12.815-11.252 14.524-16.084 4.151-31.504 10.552-45.831 19.025-5.896 3.485-13.401 2.537-18.243-2.305l-15.688-15.689c-6.764-6.772-17.627-6.615-24.224-.007l-22.727 22.726c-6.582 6.574-6.802 17.437-.006 24.225l15.695 15.695c4.842 4.842 5.79 12.348 2.305 18.242-8.473 14.326-14.873 29.746-19.024 45.831-1.71 6.624-7.684 11.251-14.524 11.251h-22.148c-9.447.001-17.134 7.687-17.134 17.134v32.134c0 9.447 7.687 17.133 17.134 17.133h22.147c6.841 0 12.814 4.628 14.524 11.251 4.151 16.085 10.552 31.505 19.024 45.831 3.485 5.894 2.537 13.4-2.305 18.242l-15.689 15.689c-6.782 6.774-6.605 17.634-.006 24.225l22.725 22.725c6.587 6.596 17.451 6.789 24.225.006l15.694-15.695c3.568-3.567 10.991-6.594 18.244-2.304z"/>
        <path
          d="m256 367.4c-61.427 0-111.4-49.974-111.4-111.4s49.973-111.4 111.4-111.4 111.4 49.974 111.4 111.4-49.973 111.4-111.4 111.4zm0-192.8c-44.885 0-81.4 36.516-81.4 81.4s36.516 81.4 81.4 81.4 81.4-36.516 81.4-81.4-36.515-81.4-81.4-81.4z"/>
      </g>
    </svg>

  );
};

